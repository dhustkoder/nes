;
; File generated by cc65 v 2.15 - Git ab1600b
;
	.fopt		compiler,"cc65 v 2.15 - Git ab1600b"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_waitvblank
	.import		_ppu_set_scroll_enable_render
	.import		_write_str
	.import		__ppu_set_cursor_exact
	.import		_joypads
	.import		_update_pad1
	.export		_main

.segment	"RODATA"

_arr:
	.addr	L0004
_words:
	.addr	L0006
	.addr	L0008
	.addr	L000A
	.addr	L000C
	.addr	L000E
	.addr	L0010
	.addr	L0012
	.addr	L0014
	.addr	L0016
	.addr	L0018
	.addr	L001A
L001A:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$00
L0004:
	.byte	$48,$45,$4C,$4C,$4F,$20,$4D,$59,$20,$4C,$49,$42,$21,$00
L0008:
	.byte	$20,$50,$52,$45,$53,$53,$45,$44,$00
L000E:
	.byte	$53,$45,$4C,$45,$43,$54,$00
L0018:
	.byte	$52,$49,$47,$48,$54,$00
L0010:
	.byte	$53,$54,$41,$52,$54,$00
L0016:
	.byte	$4C,$45,$46,$54,$00
L0014:
	.byte	$44,$4F,$57,$4E,$00
L0006:
	.byte	$4B,$45,$59,$20,$00
L0012:
	.byte	$55,$50,$00
L000A:
	.byte	$41,$00
L000C:
	.byte	$42,$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _waitvblank
	lda     #$3F
	sta     $2006
	lda     #$00
	sta     $2006
	lda     #$01
	sta     $2007
	lda     #$3F
	sta     $2006
	lda     #$03
	sta     $2006
	lda     #$20
	sta     $2007
	tax
	lda     #$21
	jsr     __ppu_set_cursor_exact
	lda     _arr
	ldx     _arr+1
	jsr     _write_str
	ldx     #$00
	txa
	jsr     _ppu_set_scroll_enable_render
	jmp     L004B
L0049:	jsr     _update_pad1
L004B:	lda     _joypads
	beq     L0049
	jsr     _waitvblank
	ldx     #$20
	lda     #$41
	jsr     __ppu_set_cursor_exact
	lda     _words+20
	ldx     _words+20+1
	jsr     _write_str
	ldx     #$20
	lda     #$41
	jsr     __ppu_set_cursor_exact
	lda     _words
	ldx     _words+1
	jsr     _write_str
	lda     _joypads
	cmp     #$01
	beq     L0065
	cmp     #$02
	beq     L006A
	cmp     #$04
	beq     L006F
	cmp     #$08
	beq     L0074
	cmp     #$10
	beq     L0079
	cmp     #$20
	beq     L007E
	cmp     #$40
	beq     L0083
	cmp     #$80
	beq     L0088
	jmp     L0063
L0065:	lda     _words+4
	ldx     _words+4+1
	jmp     L0092
L006A:	lda     _words+6
	ldx     _words+6+1
	jmp     L0092
L006F:	lda     _words+8
	ldx     _words+8+1
	jmp     L0092
L0074:	lda     _words+10
	ldx     _words+10+1
	jmp     L0092
L0079:	lda     _words+12
	ldx     _words+12+1
	jmp     L0092
L007E:	lda     _words+14
	ldx     _words+14+1
	jmp     L0092
L0083:	lda     _words+16
	ldx     _words+16+1
	jmp     L0092
L0088:	lda     _words+18
	ldx     _words+18+1
L0092:	jsr     _write_str
L0063:	lda     _words+2
	ldx     _words+2+1
	jsr     _write_str
	ldx     #$00
	txa
	jsr     _ppu_set_scroll_enable_render
	jmp     L0049

.endproc

