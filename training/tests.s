;
; File generated by cc65 v 2.15 - Git 60958f0
;
	.fopt		compiler,"cc65 v 2.15 - Git 60958f0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_itoa
	.import		_waitvblank
	.export		_main

.segment	"DATA"

_dhust:
	.addr	L007C
_colors:
	.byte	$05
	.byte	$09
	.byte	$01

.segment	"RODATA"

L007C:
	.byte	$44,$68,$75,$73,$74,$4B,$6F,$64,$65,$72,$21,$00
L00A0:
	.byte	$61,$00

.segment	"BSS"

_x:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ write_string (const unsigned char, const unsigned char, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_write_string: near

.segment	"CODE"

	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	lsr     a
	lsr     a
	lsr     a
	ldy     #$20
	jsr     incaxy
	sta     $2006
	ldy     #$02
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	sta     $2006
	jmp     L0012
L0010:	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     $2007
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
L0012:	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L0010
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _waitvblank
	lda     #$3F
	sta     $2006
	lda     #$00
	sta     $2006
	lda     #$18
	sta     $2007
	lda     #$3F
	sta     $2006
	lda     #$03
	sta     $2006
	lda     #$01
	sta     $2007
	jsr     pusha
	jsr     pusha
	lda     #<(L00A0)
	ldx     #>(L00A0)
	jsr     _write_string
	lda     #$00
	sta     $2005
	sta     $2005
	lda     #$08
	sta     $2001
L00B3:	jmp     L00B3

.endproc

